// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: priceoraclerpc/price_oracle.proto

package priceoraclerpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TransactionType is an enum representing the type of transaction.
type TransactionType int32

const (
	// PURCHASE indicates a purchase transaction.
	TransactionType_PURCHASE TransactionType = 0
	// SALE indicates a sale transaction.
	TransactionType_SALE TransactionType = 1
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "PURCHASE",
		1: "SALE",
	}
	TransactionType_value = map[string]int32{
		"PURCHASE": 0,
		"SALE":     1,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_priceoraclerpc_price_oracle_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_priceoraclerpc_price_oracle_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{0}
}

// FixedPoint is a scaled integer representation of a fractional number.
//
// This type consists of two integer fields: a coefficient and a scale.
// Using this format enables precise and consistent representation of fractional
// numbers while avoiding floating-point data types, which are prone to
// precision errors.
//
// The relationship between the fractional representation and its fixed-point
// representation is expressed as:
// ```
// V = F_c / (10^F_s)
// ```
// where:
//
// * `V` is the fractional value.
//
//   - `F_c` is the coefficient component of the fixed-point representation. It is
//     the scaled-up fractional value represented as an integer.
//
//   - `F_s` is the scale component. It is an integer specifying how
//     many decimal places `F_c` should be divided by to obtain the fractional
//     representation.
type FixedPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The coefficient is the fractional value scaled-up as an integer. This
	// integer is represented as a string as it may be too large to fit in a
	// uint64.
	Coefficient string `protobuf:"bytes,1,opt,name=coefficient,proto3" json:"coefficient,omitempty"`
	// The scale is the component that determines how many decimal places
	// the coefficient should be divided by to obtain the fractional value.
	Scale         uint32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FixedPoint) Reset() {
	*x = FixedPoint{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FixedPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixedPoint) ProtoMessage() {}

func (x *FixedPoint) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixedPoint.ProtoReflect.Descriptor instead.
func (*FixedPoint) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{0}
}

func (x *FixedPoint) GetCoefficient() string {
	if x != nil {
		return x.Coefficient
	}
	return ""
}

func (x *FixedPoint) GetScale() uint32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

// AssetRates represents the exchange rates for subject and payment assets
// relative to BTC, expressed as fixed-point numbers. It includes the rates
// for both assets and an expiration timestamp indicating when the rates
// are no longer valid.
type AssetRates struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// subjectAssetRate is the number of subject asset units per BTC represented
	// as a fixed-point number. This field is also commonly referred to as the
	// subject asset to BTC (conversion) rate. When the subject asset is BTC,
	// this field should be set to 100 billion, as one BTC is equivalent to 100
	// billion msats.
	SubjectAssetRate *FixedPoint `protobuf:"bytes,1,opt,name=subjectAssetRate,proto3" json:"subjectAssetRate,omitempty"`
	// paymentAssetRate is the number of payment asset units per BTC represented
	// as a fixed-point number. This field is also commonly referred to as the
	// payment asset to BTC (conversion) rate. When the payment asset is BTC,
	// this field should be set to 100 billion, as one BTC is equivalent to 100
	// billion msats.
	PaymentAssetRate *FixedPoint `protobuf:"bytes,2,opt,name=paymentAssetRate,proto3" json:"paymentAssetRate,omitempty"`
	// expiry_timestamp is the Unix timestamp in seconds after which the asset
	// rates are no longer valid.
	ExpiryTimestamp uint64 `protobuf:"varint,3,opt,name=expiry_timestamp,json=expiryTimestamp,proto3" json:"expiry_timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AssetRates) Reset() {
	*x = AssetRates{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetRates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetRates) ProtoMessage() {}

func (x *AssetRates) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetRates.ProtoReflect.Descriptor instead.
func (*AssetRates) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{1}
}

func (x *AssetRates) GetSubjectAssetRate() *FixedPoint {
	if x != nil {
		return x.SubjectAssetRate
	}
	return nil
}

func (x *AssetRates) GetPaymentAssetRate() *FixedPoint {
	if x != nil {
		return x.PaymentAssetRate
	}
	return nil
}

func (x *AssetRates) GetExpiryTimestamp() uint64 {
	if x != nil {
		return x.ExpiryTimestamp
	}
	return 0
}

// AssetSpecifier is a union type for specifying an asset by either its asset ID
// or group key.
type AssetSpecifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Id:
	//
	//	*AssetSpecifier_AssetId
	//	*AssetSpecifier_AssetIdStr
	//	*AssetSpecifier_GroupKey
	//	*AssetSpecifier_GroupKeyStr
	Id            isAssetSpecifier_Id `protobuf_oneof:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetSpecifier) Reset() {
	*x = AssetSpecifier{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetSpecifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetSpecifier) ProtoMessage() {}

func (x *AssetSpecifier) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetSpecifier.ProtoReflect.Descriptor instead.
func (*AssetSpecifier) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{2}
}

func (x *AssetSpecifier) GetId() isAssetSpecifier_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AssetSpecifier) GetAssetId() []byte {
	if x != nil {
		if x, ok := x.Id.(*AssetSpecifier_AssetId); ok {
			return x.AssetId
		}
	}
	return nil
}

func (x *AssetSpecifier) GetAssetIdStr() string {
	if x != nil {
		if x, ok := x.Id.(*AssetSpecifier_AssetIdStr); ok {
			return x.AssetIdStr
		}
	}
	return ""
}

func (x *AssetSpecifier) GetGroupKey() []byte {
	if x != nil {
		if x, ok := x.Id.(*AssetSpecifier_GroupKey); ok {
			return x.GroupKey
		}
	}
	return nil
}

func (x *AssetSpecifier) GetGroupKeyStr() string {
	if x != nil {
		if x, ok := x.Id.(*AssetSpecifier_GroupKeyStr); ok {
			return x.GroupKeyStr
		}
	}
	return ""
}

type isAssetSpecifier_Id interface {
	isAssetSpecifier_Id()
}

type AssetSpecifier_AssetId struct {
	// The 32-byte asset ID specified as raw bytes (gRPC only).
	AssetId []byte `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3,oneof"`
}

type AssetSpecifier_AssetIdStr struct {
	// The 32-byte asset ID encoded as a hex string (use this for REST).
	AssetIdStr string `protobuf:"bytes,2,opt,name=asset_id_str,json=assetIdStr,proto3,oneof"`
}

type AssetSpecifier_GroupKey struct {
	// The 32-byte asset group key specified as raw bytes (gRPC only).
	GroupKey []byte `protobuf:"bytes,3,opt,name=group_key,json=groupKey,proto3,oneof"`
}

type AssetSpecifier_GroupKeyStr struct {
	// The 32-byte asset group key encoded as hex string (use this for
	// REST).
	GroupKeyStr string `protobuf:"bytes,4,opt,name=group_key_str,json=groupKeyStr,proto3,oneof"`
}

func (*AssetSpecifier_AssetId) isAssetSpecifier_Id() {}

func (*AssetSpecifier_AssetIdStr) isAssetSpecifier_Id() {}

func (*AssetSpecifier_GroupKey) isAssetSpecifier_Id() {}

func (*AssetSpecifier_GroupKeyStr) isAssetSpecifier_Id() {}

// QueryAssetRatesRequest specifies the parameters for querying asset exchange
// rates in a transaction. It includes the transaction type, details about the
// subject and payment assets, and an optional hint for expected asset rates.
type QueryAssetRatesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// transaction_type indicates whether the transaction is a purchase or a
	// sale.
	TransactionType TransactionType `protobuf:"varint,1,opt,name=transaction_type,json=transactionType,proto3,enum=priceoraclerpc.TransactionType" json:"transaction_type,omitempty"`
	// subject_asset is the asset to be priced for purchase or sale.
	SubjectAsset *AssetSpecifier `protobuf:"bytes,2,opt,name=subject_asset,json=subjectAsset,proto3" json:"subject_asset,omitempty"`
	// subject_asset_max_amount is the maximum amount of the subject asset that
	// could be involved in the transaction.
	SubjectAssetMaxAmount uint64 `protobuf:"varint,3,opt,name=subject_asset_max_amount,json=subjectAssetMaxAmount,proto3" json:"subject_asset_max_amount,omitempty"`
	// payment_asset is the asset used for purchasing or receiving from a sale.
	//
	// NOTE: An asset ID of all zeros indicates that the payment asset is BTC.
	// In this case, the asset rate will be given as milli-satoshi per asset
	// unit
	PaymentAsset *AssetSpecifier `protobuf:"bytes,4,opt,name=payment_asset,json=paymentAsset,proto3" json:"payment_asset,omitempty"`
	// payment_asset_max_amount is the maximum amount of the payment asset that
	// could be involved in the transaction. This field is optional. If set to
	// zero, it is considered unset.
	PaymentAssetMaxAmount uint64 `protobuf:"varint,5,opt,name=payment_asset_max_amount,json=paymentAssetMaxAmount,proto3" json:"payment_asset_max_amount,omitempty"`
	// asset_rates_hint is an optional suggestion of asset rates for the
	// transaction, intended to provide guidance on expected pricing.
	AssetRatesHint *AssetRates `protobuf:"bytes,6,opt,name=asset_rates_hint,json=assetRatesHint,proto3" json:"asset_rates_hint,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryAssetRatesRequest) Reset() {
	*x = QueryAssetRatesRequest{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAssetRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAssetRatesRequest) ProtoMessage() {}

func (x *QueryAssetRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAssetRatesRequest.ProtoReflect.Descriptor instead.
func (*QueryAssetRatesRequest) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{3}
}

func (x *QueryAssetRatesRequest) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_PURCHASE
}

func (x *QueryAssetRatesRequest) GetSubjectAsset() *AssetSpecifier {
	if x != nil {
		return x.SubjectAsset
	}
	return nil
}

func (x *QueryAssetRatesRequest) GetSubjectAssetMaxAmount() uint64 {
	if x != nil {
		return x.SubjectAssetMaxAmount
	}
	return 0
}

func (x *QueryAssetRatesRequest) GetPaymentAsset() *AssetSpecifier {
	if x != nil {
		return x.PaymentAsset
	}
	return nil
}

func (x *QueryAssetRatesRequest) GetPaymentAssetMaxAmount() uint64 {
	if x != nil {
		return x.PaymentAssetMaxAmount
	}
	return 0
}

func (x *QueryAssetRatesRequest) GetAssetRatesHint() *AssetRates {
	if x != nil {
		return x.AssetRatesHint
	}
	return nil
}

// QueryAssetRatesOkResponse is the successful response to a
// QueryAssetRates call.
type QueryAssetRatesOkResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// asset_rates is the asset exchange rates for the transaction.
	AssetRates    *AssetRates `protobuf:"bytes,1,opt,name=asset_rates,json=assetRates,proto3" json:"asset_rates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAssetRatesOkResponse) Reset() {
	*x = QueryAssetRatesOkResponse{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAssetRatesOkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAssetRatesOkResponse) ProtoMessage() {}

func (x *QueryAssetRatesOkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAssetRatesOkResponse.ProtoReflect.Descriptor instead.
func (*QueryAssetRatesOkResponse) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{4}
}

func (x *QueryAssetRatesOkResponse) GetAssetRates() *AssetRates {
	if x != nil {
		return x.AssetRates
	}
	return nil
}

// QueryAssetRatesErrResponse is the error response to a QueryAssetRates call.
type QueryAssetRatesErrResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// error is the error message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// code is the error code.
	Code          uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAssetRatesErrResponse) Reset() {
	*x = QueryAssetRatesErrResponse{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAssetRatesErrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAssetRatesErrResponse) ProtoMessage() {}

func (x *QueryAssetRatesErrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAssetRatesErrResponse.ProtoReflect.Descriptor instead.
func (*QueryAssetRatesErrResponse) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{5}
}

func (x *QueryAssetRatesErrResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryAssetRatesErrResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// QueryAssetRatesResponse is the response from a QueryAssetRates RPC call.
type QueryAssetRatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*QueryAssetRatesResponse_Ok
	//	*QueryAssetRatesResponse_Error
	Result        isQueryAssetRatesResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAssetRatesResponse) Reset() {
	*x = QueryAssetRatesResponse{}
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAssetRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAssetRatesResponse) ProtoMessage() {}

func (x *QueryAssetRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAssetRatesResponse.ProtoReflect.Descriptor instead.
func (*QueryAssetRatesResponse) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{6}
}

func (x *QueryAssetRatesResponse) GetResult() isQueryAssetRatesResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *QueryAssetRatesResponse) GetOk() *QueryAssetRatesOkResponse {
	if x != nil {
		if x, ok := x.Result.(*QueryAssetRatesResponse_Ok); ok {
			return x.Ok
		}
	}
	return nil
}

func (x *QueryAssetRatesResponse) GetError() *QueryAssetRatesErrResponse {
	if x != nil {
		if x, ok := x.Result.(*QueryAssetRatesResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isQueryAssetRatesResponse_Result interface {
	isQueryAssetRatesResponse_Result()
}

type QueryAssetRatesResponse_Ok struct {
	// ok is the successful response to the query.
	Ok *QueryAssetRatesOkResponse `protobuf:"bytes,1,opt,name=ok,proto3,oneof"`
}

type QueryAssetRatesResponse_Error struct {
	// error is the error response to the query.
	Error *QueryAssetRatesErrResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*QueryAssetRatesResponse_Ok) isQueryAssetRatesResponse_Result() {}

func (*QueryAssetRatesResponse_Error) isQueryAssetRatesResponse_Result() {}

var File_priceoraclerpc_price_oracle_proto protoreflect.FileDescriptor

const file_priceoraclerpc_price_oracle_proto_rawDesc = "" +
	"\n" +
	"!priceoraclerpc/price_oracle.proto\x12\x0epriceoraclerpc\"D\n" +
	"\n" +
	"FixedPoint\x12 \n" +
	"\vcoefficient\x18\x01 \x01(\tR\vcoefficient\x12\x14\n" +
	"\x05scale\x18\x02 \x01(\rR\x05scale\"\xc7\x01\n" +
	"\n" +
	"AssetRates\x12F\n" +
	"\x10subjectAssetRate\x18\x01 \x01(\v2\x1a.priceoraclerpc.FixedPointR\x10subjectAssetRate\x12F\n" +
	"\x10paymentAssetRate\x18\x02 \x01(\v2\x1a.priceoraclerpc.FixedPointR\x10paymentAssetRate\x12)\n" +
	"\x10expiry_timestamp\x18\x03 \x01(\x04R\x0fexpiryTimestamp\"\x9c\x01\n" +
	"\x0eAssetSpecifier\x12\x1b\n" +
	"\basset_id\x18\x01 \x01(\fH\x00R\aassetId\x12\"\n" +
	"\fasset_id_str\x18\x02 \x01(\tH\x00R\n" +
	"assetIdStr\x12\x1d\n" +
	"\tgroup_key\x18\x03 \x01(\fH\x00R\bgroupKey\x12$\n" +
	"\rgroup_key_str\x18\x04 \x01(\tH\x00R\vgroupKeyStrB\x04\n" +
	"\x02id\"\xa6\x03\n" +
	"\x16QueryAssetRatesRequest\x12J\n" +
	"\x10transaction_type\x18\x01 \x01(\x0e2\x1f.priceoraclerpc.TransactionTypeR\x0ftransactionType\x12C\n" +
	"\rsubject_asset\x18\x02 \x01(\v2\x1e.priceoraclerpc.AssetSpecifierR\fsubjectAsset\x127\n" +
	"\x18subject_asset_max_amount\x18\x03 \x01(\x04R\x15subjectAssetMaxAmount\x12C\n" +
	"\rpayment_asset\x18\x04 \x01(\v2\x1e.priceoraclerpc.AssetSpecifierR\fpaymentAsset\x127\n" +
	"\x18payment_asset_max_amount\x18\x05 \x01(\x04R\x15paymentAssetMaxAmount\x12D\n" +
	"\x10asset_rates_hint\x18\x06 \x01(\v2\x1a.priceoraclerpc.AssetRatesR\x0eassetRatesHint\"X\n" +
	"\x19QueryAssetRatesOkResponse\x12;\n" +
	"\vasset_rates\x18\x01 \x01(\v2\x1a.priceoraclerpc.AssetRatesR\n" +
	"assetRates\"J\n" +
	"\x1aQueryAssetRatesErrResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\rR\x04code\"\xa4\x01\n" +
	"\x17QueryAssetRatesResponse\x12;\n" +
	"\x02ok\x18\x01 \x01(\v2).priceoraclerpc.QueryAssetRatesOkResponseH\x00R\x02ok\x12B\n" +
	"\x05error\x18\x02 \x01(\v2*.priceoraclerpc.QueryAssetRatesErrResponseH\x00R\x05errorB\b\n" +
	"\x06result*)\n" +
	"\x0fTransactionType\x12\f\n" +
	"\bPURCHASE\x10\x00\x12\b\n" +
	"\x04SALE\x10\x012q\n" +
	"\vPriceOracle\x12b\n" +
	"\x0fQueryAssetRates\x12&.priceoraclerpc.QueryAssetRatesRequest\x1a'.priceoraclerpc.QueryAssetRatesResponseB?Z=github.com/lightninglabs/taproot-assets/taprpc/priceoraclerpcb\x06proto3"

var (
	file_priceoraclerpc_price_oracle_proto_rawDescOnce sync.Once
	file_priceoraclerpc_price_oracle_proto_rawDescData []byte
)

func file_priceoraclerpc_price_oracle_proto_rawDescGZIP() []byte {
	file_priceoraclerpc_price_oracle_proto_rawDescOnce.Do(func() {
		file_priceoraclerpc_price_oracle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_priceoraclerpc_price_oracle_proto_rawDesc), len(file_priceoraclerpc_price_oracle_proto_rawDesc)))
	})
	return file_priceoraclerpc_price_oracle_proto_rawDescData
}

var file_priceoraclerpc_price_oracle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_priceoraclerpc_price_oracle_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_priceoraclerpc_price_oracle_proto_goTypes = []any{
	(TransactionType)(0),               // 0: priceoraclerpc.TransactionType
	(*FixedPoint)(nil),                 // 1: priceoraclerpc.FixedPoint
	(*AssetRates)(nil),                 // 2: priceoraclerpc.AssetRates
	(*AssetSpecifier)(nil),             // 3: priceoraclerpc.AssetSpecifier
	(*QueryAssetRatesRequest)(nil),     // 4: priceoraclerpc.QueryAssetRatesRequest
	(*QueryAssetRatesOkResponse)(nil),  // 5: priceoraclerpc.QueryAssetRatesOkResponse
	(*QueryAssetRatesErrResponse)(nil), // 6: priceoraclerpc.QueryAssetRatesErrResponse
	(*QueryAssetRatesResponse)(nil),    // 7: priceoraclerpc.QueryAssetRatesResponse
}
var file_priceoraclerpc_price_oracle_proto_depIdxs = []int32{
	1,  // 0: priceoraclerpc.AssetRates.subjectAssetRate:type_name -> priceoraclerpc.FixedPoint
	1,  // 1: priceoraclerpc.AssetRates.paymentAssetRate:type_name -> priceoraclerpc.FixedPoint
	0,  // 2: priceoraclerpc.QueryAssetRatesRequest.transaction_type:type_name -> priceoraclerpc.TransactionType
	3,  // 3: priceoraclerpc.QueryAssetRatesRequest.subject_asset:type_name -> priceoraclerpc.AssetSpecifier
	3,  // 4: priceoraclerpc.QueryAssetRatesRequest.payment_asset:type_name -> priceoraclerpc.AssetSpecifier
	2,  // 5: priceoraclerpc.QueryAssetRatesRequest.asset_rates_hint:type_name -> priceoraclerpc.AssetRates
	2,  // 6: priceoraclerpc.QueryAssetRatesOkResponse.asset_rates:type_name -> priceoraclerpc.AssetRates
	5,  // 7: priceoraclerpc.QueryAssetRatesResponse.ok:type_name -> priceoraclerpc.QueryAssetRatesOkResponse
	6,  // 8: priceoraclerpc.QueryAssetRatesResponse.error:type_name -> priceoraclerpc.QueryAssetRatesErrResponse
	4,  // 9: priceoraclerpc.PriceOracle.QueryAssetRates:input_type -> priceoraclerpc.QueryAssetRatesRequest
	7,  // 10: priceoraclerpc.PriceOracle.QueryAssetRates:output_type -> priceoraclerpc.QueryAssetRatesResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_priceoraclerpc_price_oracle_proto_init() }
func file_priceoraclerpc_price_oracle_proto_init() {
	if File_priceoraclerpc_price_oracle_proto != nil {
		return
	}
	file_priceoraclerpc_price_oracle_proto_msgTypes[2].OneofWrappers = []any{
		(*AssetSpecifier_AssetId)(nil),
		(*AssetSpecifier_AssetIdStr)(nil),
		(*AssetSpecifier_GroupKey)(nil),
		(*AssetSpecifier_GroupKeyStr)(nil),
	}
	file_priceoraclerpc_price_oracle_proto_msgTypes[6].OneofWrappers = []any{
		(*QueryAssetRatesResponse_Ok)(nil),
		(*QueryAssetRatesResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_priceoraclerpc_price_oracle_proto_rawDesc), len(file_priceoraclerpc_price_oracle_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_priceoraclerpc_price_oracle_proto_goTypes,
		DependencyIndexes: file_priceoraclerpc_price_oracle_proto_depIdxs,
		EnumInfos:         file_priceoraclerpc_price_oracle_proto_enumTypes,
		MessageInfos:      file_priceoraclerpc_price_oracle_proto_msgTypes,
	}.Build()
	File_priceoraclerpc_price_oracle_proto = out.File
	file_priceoraclerpc_price_oracle_proto_goTypes = nil
	file_priceoraclerpc_price_oracle_proto_depIdxs = nil
}
