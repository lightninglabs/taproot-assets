// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: priceoraclerpc/price_oracle.proto

package priceoraclerpc

import (
	rfqrpc "github.com/lightninglabs/taproot-assets/taprpc/rfqrpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TransactionType is an enum representing the type of transaction.
type TransactionType int32

const (
	// PURCHASE indicates a purchase transaction (also called buy or bid order).
	TransactionType_PURCHASE TransactionType = 0
	// SALE indicates a sale transaction (also called sell or ask order).
	TransactionType_SALE TransactionType = 1
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "PURCHASE",
		1: "SALE",
	}
	TransactionType_value = map[string]int32{
		"PURCHASE": 0,
		"SALE":     1,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_priceoraclerpc_price_oracle_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_priceoraclerpc_price_oracle_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{0}
}

type QueryPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of transaction, either a purchase or a sale.
	TransactionType TransactionType `protobuf:"varint,1,opt,name=transaction_type,json=transactionType,proto3,enum=priceoraclerpc.TransactionType" json:"transaction_type,omitempty"`
	// The input asset as seen from the point of view of the wallet end user. For
	// a sell order (paying a satoshi-denominated invoice with assets), this is the
	// asset that flows into the network to satisfy the invoice (usually BTC). For
	// a buy order (receiving assets via an invoice), this is the asset that flows
	// into the user's wallet.
	//
	// NOTE: An asset ID of all zeros indicates that the input asset is BTC. In
	// this case, the in asset price will be given as a static value of
	// milli-satoshi per BTC (10^11).
	InAsset *rfqrpc.AssetSpecifier `protobuf:"bytes,2,opt,name=in_asset,json=inAsset,proto3" json:"in_asset,omitempty"`
	// The maximum amount of the input asset that the user requests to sell or buy.
	// The edge node should accept swaps up to that total amount. This is always
	// expressed in the input asset, because that is the variable the user knows.
	// For example, when paying a satoshi-denominated invoice (sell order), the
	// user knows the amount of satoshis that need to flow into the network (the
	// invoice amount plus a maximum user-defined routing fee). When receiving
	// assets via an invoice (buy order), the user knows the amount of assets that
	// they want to receive. The output asset amount is always the result of the
	// price query, so it is the unknown value to the user.
	InAssetMaxAmount uint64 `protobuf:"varint,3,opt,name=in_asset_max_amount,json=inAssetMaxAmount,proto3" json:"in_asset_max_amount,omitempty"`
	// The output asset as seen from the point of view of the wallet end user. For
	// a sell order (paying a satoshi-denominated invoice with assets), this is the
	// asset that the user is selling. For a buy order (receiving assets via an
	// invoice), this is the asset that flows from the network to the edge node to
	// pay for the invoice (usually BTC).
	//
	// NOTE: An asset ID of all zeros indicates that the output asset is BTC. In
	// this case, the out asset price will be given as a static value of
	// milli-satoshi per BTC (10^11).
	OutAsset *rfqrpc.AssetSpecifier `protobuf:"bytes,4,opt,name=out_asset,json=outAsset,proto3" json:"out_asset,omitempty"`
	// An optional suggested price for the input/output asset, used to provide
	// guidance on expected pricing.
	PriceHint *PriceQuote `protobuf:"bytes,5,opt,name=price_hint,json=priceHint,proto3" json:"price_hint,omitempty"`
}

func (x *QueryPriceRequest) Reset() {
	*x = QueryPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceRequest) ProtoMessage() {}

func (x *QueryPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceRequest.ProtoReflect.Descriptor instead.
func (*QueryPriceRequest) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{0}
}

func (x *QueryPriceRequest) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_PURCHASE
}

func (x *QueryPriceRequest) GetInAsset() *rfqrpc.AssetSpecifier {
	if x != nil {
		return x.InAsset
	}
	return nil
}

func (x *QueryPriceRequest) GetInAssetMaxAmount() uint64 {
	if x != nil {
		return x.InAssetMaxAmount
	}
	return 0
}

func (x *QueryPriceRequest) GetOutAsset() *rfqrpc.AssetSpecifier {
	if x != nil {
		return x.OutAsset
	}
	return nil
}

func (x *QueryPriceRequest) GetPriceHint() *PriceQuote {
	if x != nil {
		return x.PriceHint
	}
	return nil
}

type PriceQuote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The price of the input asset, expressed as number of asset units per BTC,
	// represented as a fixed point number. If The input asset is BTC, the value
	// will be given as a static value of milli-satoshi per BTC (10^11).
	InAssetPrice *rfqrpc.FixedPoint `protobuf:"bytes,1,opt,name=in_asset_price,json=inAssetPrice,proto3" json:"in_asset_price,omitempty"`
	// The price of the output asset, expressed as number of asset units per BTC,
	// represented as a fixed point number. If The output asset is BTC, the value
	// will be given as a static value of milli-satoshi per BTC (10^11).
	OutAssetPrice *rfqrpc.FixedPoint `protobuf:"bytes,2,opt,name=out_asset_price,json=outAssetPrice,proto3" json:"out_asset_price,omitempty"`
	// The expiry as a Unix timestamp in seconds after which the price is no
	// longer valid.
	ExpiryTimestamp uint64 `protobuf:"varint,3,opt,name=expiry_timestamp,json=expiryTimestamp,proto3" json:"expiry_timestamp,omitempty"`
}

func (x *PriceQuote) Reset() {
	*x = PriceQuote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceQuote) ProtoMessage() {}

func (x *PriceQuote) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceQuote.ProtoReflect.Descriptor instead.
func (*PriceQuote) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{1}
}

func (x *PriceQuote) GetInAssetPrice() *rfqrpc.FixedPoint {
	if x != nil {
		return x.InAssetPrice
	}
	return nil
}

func (x *PriceQuote) GetOutAssetPrice() *rfqrpc.FixedPoint {
	if x != nil {
		return x.OutAssetPrice
	}
	return nil
}

func (x *PriceQuote) GetExpiryTimestamp() uint64 {
	if x != nil {
		return x.ExpiryTimestamp
	}
	return 0
}

type QueryPriceError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The human-readable message of the error.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The code of the error.
	Code uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *QueryPriceError) Reset() {
	*x = QueryPriceError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPriceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceError) ProtoMessage() {}

func (x *QueryPriceError) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceError.ProtoReflect.Descriptor instead.
func (*QueryPriceError) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPriceError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryPriceError) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type QueryPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*QueryPriceResponse_Success
	//	*QueryPriceResponse_Error
	Result isQueryPriceResponse_Result `protobuf_oneof:"result"`
}

func (x *QueryPriceResponse) Reset() {
	*x = QueryPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPriceResponse) ProtoMessage() {}

func (x *QueryPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceoraclerpc_price_oracle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPriceResponse.ProtoReflect.Descriptor instead.
func (*QueryPriceResponse) Descriptor() ([]byte, []int) {
	return file_priceoraclerpc_price_oracle_proto_rawDescGZIP(), []int{3}
}

func (m *QueryPriceResponse) GetResult() isQueryPriceResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *QueryPriceResponse) GetSuccess() *PriceQuote {
	if x, ok := x.GetResult().(*QueryPriceResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *QueryPriceResponse) GetError() *QueryPriceError {
	if x, ok := x.GetResult().(*QueryPriceResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isQueryPriceResponse_Result interface {
	isQueryPriceResponse_Result()
}

type QueryPriceResponse_Success struct {
	// The successful response to the price query.
	Success *PriceQuote `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type QueryPriceResponse_Error struct {
	// The error response to the price query.
	Error *QueryPriceError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*QueryPriceResponse_Success) isQueryPriceResponse_Result() {}

func (*QueryPriceResponse_Error) isQueryPriceResponse_Result() {}

var File_priceoraclerpc_price_oracle_proto protoreflect.FileDescriptor

var file_priceoraclerpc_price_oracle_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x72, 0x70, 0x63, 0x1a, 0x10, 0x72, 0x66, 0x71, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x66, 0x71, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x66, 0x71, 0x72,
	0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x07, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x6e,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x6f, 0x75, 0x74,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x66, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x09,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x69, 0x6e, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x66, 0x71, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x69, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x66,
	0x71, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0d, 0x6f, 0x75, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3f, 0x0a, 0x0f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x29, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x32, 0x62, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e,
	0x69, 0x6e, 0x67, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x2d,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2f, 0x74, 0x61, 0x70, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_priceoraclerpc_price_oracle_proto_rawDescOnce sync.Once
	file_priceoraclerpc_price_oracle_proto_rawDescData = file_priceoraclerpc_price_oracle_proto_rawDesc
)

func file_priceoraclerpc_price_oracle_proto_rawDescGZIP() []byte {
	file_priceoraclerpc_price_oracle_proto_rawDescOnce.Do(func() {
		file_priceoraclerpc_price_oracle_proto_rawDescData = protoimpl.X.CompressGZIP(file_priceoraclerpc_price_oracle_proto_rawDescData)
	})
	return file_priceoraclerpc_price_oracle_proto_rawDescData
}

var file_priceoraclerpc_price_oracle_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_priceoraclerpc_price_oracle_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_priceoraclerpc_price_oracle_proto_goTypes = []interface{}{
	(TransactionType)(0),          // 0: priceoraclerpc.TransactionType
	(*QueryPriceRequest)(nil),     // 1: priceoraclerpc.QueryPriceRequest
	(*PriceQuote)(nil),            // 2: priceoraclerpc.PriceQuote
	(*QueryPriceError)(nil),       // 3: priceoraclerpc.QueryPriceError
	(*QueryPriceResponse)(nil),    // 4: priceoraclerpc.QueryPriceResponse
	(*rfqrpc.AssetSpecifier)(nil), // 5: rfqrpc.AssetSpecifier
	(*rfqrpc.FixedPoint)(nil),     // 6: rfqrpc.FixedPoint
}
var file_priceoraclerpc_price_oracle_proto_depIdxs = []int32{
	0, // 0: priceoraclerpc.QueryPriceRequest.transaction_type:type_name -> priceoraclerpc.TransactionType
	5, // 1: priceoraclerpc.QueryPriceRequest.in_asset:type_name -> rfqrpc.AssetSpecifier
	5, // 2: priceoraclerpc.QueryPriceRequest.out_asset:type_name -> rfqrpc.AssetSpecifier
	2, // 3: priceoraclerpc.QueryPriceRequest.price_hint:type_name -> priceoraclerpc.PriceQuote
	6, // 4: priceoraclerpc.PriceQuote.in_asset_price:type_name -> rfqrpc.FixedPoint
	6, // 5: priceoraclerpc.PriceQuote.out_asset_price:type_name -> rfqrpc.FixedPoint
	2, // 6: priceoraclerpc.QueryPriceResponse.success:type_name -> priceoraclerpc.PriceQuote
	3, // 7: priceoraclerpc.QueryPriceResponse.error:type_name -> priceoraclerpc.QueryPriceError
	1, // 8: priceoraclerpc.PriceOracle.QueryPrice:input_type -> priceoraclerpc.QueryPriceRequest
	4, // 9: priceoraclerpc.PriceOracle.QueryPrice:output_type -> priceoraclerpc.QueryPriceResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_priceoraclerpc_price_oracle_proto_init() }
func file_priceoraclerpc_price_oracle_proto_init() {
	if File_priceoraclerpc_price_oracle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_priceoraclerpc_price_oracle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_priceoraclerpc_price_oracle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceQuote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_priceoraclerpc_price_oracle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPriceError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_priceoraclerpc_price_oracle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_priceoraclerpc_price_oracle_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*QueryPriceResponse_Success)(nil),
		(*QueryPriceResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_priceoraclerpc_price_oracle_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_priceoraclerpc_price_oracle_proto_goTypes,
		DependencyIndexes: file_priceoraclerpc_price_oracle_proto_depIdxs,
		EnumInfos:         file_priceoraclerpc_price_oracle_proto_enumTypes,
		MessageInfos:      file_priceoraclerpc_price_oracle_proto_msgTypes,
	}.Build()
	File_priceoraclerpc_price_oracle_proto = out.File
	file_priceoraclerpc_price_oracle_proto_rawDesc = nil
	file_priceoraclerpc_price_oracle_proto_goTypes = nil
	file_priceoraclerpc_price_oracle_proto_depIdxs = nil
}
