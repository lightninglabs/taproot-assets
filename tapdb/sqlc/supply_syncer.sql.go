// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: supply_syncer.sql

package sqlc

import (
	"context"
)

const FetchSupplySyncerPushLogs = `-- name: FetchSupplySyncerPushLogs :many
SELECT id, group_key, max_pushed_block_height, server_address,
       commit_txid, output_index, num_leaves_pushed, created_at
FROM supply_syncer_push_log 
WHERE group_key = $1
ORDER BY created_at DESC
`

// Fetches all push log entries for a given asset group, ordered by
// creation time with the most recent entries first.
func (q *Queries) FetchSupplySyncerPushLogs(ctx context.Context, groupKey []byte) ([]SupplySyncerPushLog, error) {
	rows, err := q.db.QueryContext(ctx, FetchSupplySyncerPushLogs, groupKey)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SupplySyncerPushLog
	for rows.Next() {
		var i SupplySyncerPushLog
		if err := rows.Scan(
			&i.ID,
			&i.GroupKey,
			&i.MaxPushedBlockHeight,
			&i.ServerAddress,
			&i.CommitTxid,
			&i.OutputIndex,
			&i.NumLeavesPushed,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const InsertSupplySyncerPushLog = `-- name: InsertSupplySyncerPushLog :exec
INSERT INTO supply_syncer_push_log (
    group_key, max_pushed_block_height, server_address, 
    commit_txid, output_index, num_leaves_pushed, created_at
) VALUES (
    $1, $2, $3,
    $4, $5, $6, $7
)
`

type InsertSupplySyncerPushLogParams struct {
	GroupKey             []byte
	MaxPushedBlockHeight int32
	ServerAddress        string
	CommitTxid           []byte
	OutputIndex          int32
	NumLeavesPushed      int32
	CreatedAt            int64
}

// Inserts a new push log entry to track a successful supply commitment
// push to a remote universe server. The commit_txid and output_index are
// taken directly from the RootCommitment outpoint.
func (q *Queries) InsertSupplySyncerPushLog(ctx context.Context, arg InsertSupplySyncerPushLogParams) error {
	_, err := q.db.ExecContext(ctx, InsertSupplySyncerPushLog,
		arg.GroupKey,
		arg.MaxPushedBlockHeight,
		arg.ServerAddress,
		arg.CommitTxid,
		arg.OutputIndex,
		arg.NumLeavesPushed,
		arg.CreatedAt,
	)
	return err
}
