// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: metadata.sql

package sqlc

import (
	"context"
)

const AssetsDBSizePostgres = `-- name: AssetsDBSizePostgres :one
SELECT pg_catalog.pg_database_size(current_database()) AS size
`

func (q *Queries) AssetsDBSizePostgres(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, AssetsDBSizePostgres)
	var size int64
	err := row.Scan(&size)
	return size, err
}

const AssetsDBSizeSqlite = `-- name: AssetsDBSizeSqlite :one
SELECT pc.page_count * ps.page_size AS size_in_bytes
FROM pragma_page_count() AS pc, pragma_page_size() AS ps
`

func (q *Queries) AssetsDBSizeSqlite(ctx context.Context) (int32, error) {
	row := q.db.QueryRowContext(ctx, AssetsDBSizeSqlite)
	var size_in_bytes int32
	err := row.Scan(&size_in_bytes)
	return size_in_bytes, err
}
