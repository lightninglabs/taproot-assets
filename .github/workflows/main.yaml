name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

defaults:
  run:
    shell: bash

env:
  # go needs absolute directories, using the $HOME variable doesn't work here.
  GOCACHE: /home/runner/work/go/pkg/build
  GOPATH: /home/runner/work/go
  GO111MODULE: on

  GO_VERSION: '^1.18.0'

jobs:
  #######################
  # sql model generation
  #######################
  sqlc-check:
    name: Sqlc check
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: docker image cache
        uses: satackey/action-docker-layer-caching@v0.0.11

      - name: Generate sql models
        run: make sqlc

  ########################
  # Format, compilation and lint check
  ########################
  lint-check:
    name: Format, compilation and lint check
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: run format
        run: make fmt

      - name: compile code
        run: go install -v ./...

      - name: run lint
        run: make lint

  ########################
  # run unit tests
  ########################
  unit-test:
    name: run unit tests
    runs-on: ubuntu-latest
    strategy:
      # Allow other tests in the matrix to continue if one fails.
      fail-fast: false
      matrix:
        unit_type:
          - unit-race
          - unit-cover
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: taro-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            taro-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            taro-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            taro-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            taro-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: run ${{ matrix.unit_type }}
        run: make ${{ matrix.unit_type }}

      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        if: matrix.unit_type == 'unit-cover'
        with:
          path-to-profile: coverage.txt
          parallel: true
